#include <iostream>

using namespace std;

/////////////////////    1
class Point{
private:
    float x, y;
public:
    Point(){
        x=0;
        y=0;
    }
friend istream & operator >> ( istream & in_strm, Point & P );
friend class Points;
void printPoint(){
cout << "x: " << x << "\t y: " << y << endl;
}
};

istream & operator >> ( istream & in_strm, Point & P ){
    return in_strm >> P.x >> P.y;
}


/////////////////////    2
class Points{
private:
    Point *pkty;
    int size;
public:
    friend ostream & operator << ( ostream & out_strm, Points & P);
    friend Point *closestToTheCenter( Points &P);
};

ostream & operator << ( ostream & out_strm, Points & P){
    return out_strm << "x: " << P.pkty->x << "\t y: " << P.pkty->y << endl;
}
////////////////////       3
class PointsOperations{
    static Point *closestToTheCenter( Points &P){

        //sprawdzenie srodka ciezkosci
        float srX=0, srY=0;
        for (int i = 0; i < P.size; i++){
            srX+= P.pkty[i].x;

        }
    }
};

int main(int argc, char *argv[])
{
    cout << "Hello World!" << endl;
    Point P;
    cin >> P;
    P.printPoint();
    return 0;
}
